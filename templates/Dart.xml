<templateSet group="Dart">
  <template name="print" value="print($VAR$$END$);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART_STATEMENT" value="true" />
    </context>
  </template>
  <template name="val" value="final $variableName$;" description="Change val to final" toReformat="false" toShortenFQNames="true">
    <variable name="variableName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART_STATEMENT" value="true" />
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="kt" value="import 'package:kt_dart/kt.dart';" description="Import kotlin extension" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="jmodel" value="import 'package:json_annotation/json_annotation.dart';&#10;&#10;part '$NAME_SNAKE_CASE$.g.dart';&#10;&#10;@JsonSerializable()&#10;class $NAME$ {&#10;&#10;  factory $NAME$.fromJson(Map&lt;String, dynamic&gt; json) =&gt; _$$$NAME$FromJson(json);&#10;&#10;  Map&lt;String, dynamic&gt; toJson() =&gt; _$$$NAME$ToJson(this);&#10;}" description="Create json model" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME_SNAKE_CASE" expression="" defaultValue="snakeCase(NAME)" alwaysStopAt="false" />
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="fmodel" value="import 'package:freezed_annotation/freezed_annotation.dart';&#10;&#10;part '$NAME_SNAKE_CASE$.freezed.dart';&#10;&#10;@freezed&#10;class $NAME$ with _$$$NAME$ {&#10;&#10;  const factory $NAME$({&#10;  $END$&#10;  })= _$NAME$;&#10; &#10;}&#10;" description="Create FreezeModel" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME_SNAKE_CASE" expression="" defaultValue="snakeCase(NAME)" alwaysStopAt="false" />
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="rservice" value="import 'package:dio/dio.dart';&#10;import 'package:injectable/injectable.dart';&#10;import 'package:retrofit/http.dart';&#10;&#10;part '$NAME_SNAKE_CASE$.g.dart';&#10;&#10;@injectable&#10;@RestApi(baseUrl: &quot;&quot;)&#10;abstract class $NAME$ {&#10;&#10;  @factoryMethod&#10;  factory $NAME$() {&#10;    final dio = Dio();&#10;    return _$NAME$(dio);&#10;  }&#10;}" description="Create Retrofit Service" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME_SNAKE_CASE" expression="" defaultValue="snakeCase(NAME)" alwaysStopAt="false" />
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="usecase" value="import 'package:injectable/injectable.dart';&#10;import 'package:suraking/core/helper/usecase_result.dart';&#10;&#10;abstract class $NAME$UseCase {&#10;  Future&lt;UseCaseResult&lt;$TYPE$&gt;&gt; execute();&#10;}&#10;&#10;@Injectable(as: $NAME$UseCase)&#10;class $NAME$UseCaseImpl extends $NAME$UseCase {&#10;  @override&#10;  Future&lt;UseCaseResult&lt;$TYPE$&gt;&gt; execute() async {&#10;    try {&#10;      $END$&#10;      return UseCaseResult.success();&#10;    } catch (error) {&#10;      return UseCaseResult.error(error);&#10;    }&#10;  }&#10;}&#10;" description="Create UseCase" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="contextx" value="import 'package:suraking/core/helper/context_extension.dart';" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="nulll" value="if ($VAR$ == null) return $END$;" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>